/*
	Euler02.scala

	Copyright Â© 2010 Randall R. Schulz. ALL RIGHTS RESERVED

	$Id$
*/

/*
	Each new term in the Fibonacci sequence is generated by adding the previous two terms.
	By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	Find the sum of all the even-valued terms in the sequence which do not exceed four million.
*/

package		rrs.euler


/**
	class Euler02
*/
object		Euler02
{
	import rrs.num.FibonacciL._

	def
	euler02(limit: Long): Long =
		(0l /: fibs.filter(_ % 2 == 0).takeWhile(_ < limit)) (_ + _)

	def
	main(args: Array[String]): Unit =
		printf("Euler02: %d%n", euler02(4000000))
}
